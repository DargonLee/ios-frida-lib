/*
 * Auto-generated by Frida. Please modify to match the signature of +[UUSdpManager setupSdpHost:port:groupId:userName:password:loginType:complete:].
 * This stub is currently auto-generated from manpages when available.
 *
 * For full API reference, see: https://frida.re/docs/javascript-api/
 */

{
  /**
   * Called synchronously when about to call +[UUSdpManager setupSdpHost:port:groupId:userName:password:loginType:complete:].
   *
   * @this {object} - Object allowing you to store state for use in onLeave.
   * @param {function} log - Call this function with a string to be presented to the user.
   * @param {array} args - Function arguments represented as an array of NativePointer objects.
   * For example use args[0].readUtf8String() if the first argument is a pointer to a C string encoded as UTF-8.
   * It is also possible to modify arguments by assigning a NativePointer object to an element of this array.
   * @param {object} state - Object allowing you to keep state across function calls.
   * Only one JavaScript function will execute at a time, so do not worry about race-conditions.
   * However, do not use this to store function arguments across onEnter/onLeave, but instead
   * use "this" which is an object for keeping state local to an invocation.
   */
  onEnter(log, args, state) {
    log(`+[UUSdpManager setupSdpHost:${args[2]} port:${args[3]} groupId:${args[4]} userName:${args[5]} password:${args[6]} loginType:${args[7]} complete:${args[8]}]`);
    console.log(ObjC.Object(args[2]).toString());
    console.log(ObjC.Object(args[3]).toString());
    console.log(ObjC.Object(args[4]).toString());
    console.log(ObjC.Object(args[5]).toString());
    console.log(ObjC.Object(args[6]).toString());
    console.log(ObjC.Object(args[7]).toString());
    // args[4] = ObjC.classes.NSString.stringWithString_("group.com.zhizhangyi.mos")
    var url = ObjC.classes.NSFileManager.defaultManager().containerURLForSecurityApplicationGroupIdentifier_("group.com.jnit.ngpt");
    console.log(ObjC.Object(url).absoluteString());
  },

  /**
   * Called synchronously when about to return from +[UUSdpManager setupSdpHost:port:groupId:userName:password:loginType:complete:].
   *
   * See onEnter for details.
   *
   * @this {object} - Object allowing you to access state stored in onEnter.
   * @param {function} log - Call this function with a string to be presented to the user.
   * @param {NativePointer} retval - Return value represented as a NativePointer object.
   * @param {object} state - Object allowing you to keep state across function calls.
   */
  onLeave(log, retval, state) {

  }
}
